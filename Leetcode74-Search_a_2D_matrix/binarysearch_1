# Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

# Integers in each row are sorted from left to right.
# The first integer of each row is greater than the last integer of the previous row.

# ===========================================
        # O (m . n)
# ===========================================


matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]]


class Solution:
    def searchMatrix(self, matrix: list[list[int]], target: int) -> bool:

    # =====================    
        for i in range(len(matrix)):
            for j in range(len(matrix[i])):
                # print(matrix[i][j])
                if target == matrix[i][j]:
                    return True
        
        return False




target = 34


sol = Solution()
result = sol.searchMatrix(matrix, target)
print(f'Output : {result}')
